/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static basiclibrary.Library.getWeather;
import static basiclibrary.Library.tally;
import static org.junit.jupiter.api.Assertions.*;


class LibraryTest {

//    Library testing = new Library();
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'"

    @Test void testLowHighTemp() {
            int[][] weeklyMonthTemperatures = {
                    {66, 64, 58, 65, 71, 57, 60},
                    {57, 65, 65, 70, 72, 65, 51},
                    {55, 54, 60, 53, 59, 57, 61},
                    {65, 56, 55, 52, 55, 62, 57}
            };
            assertEquals("Never saw temperature: [63, 67, 68, 69]", getWeather(weeklyMonthTemperatures));
    }
    @Test
    public void testWinner() {

        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        String expectedWinner = "Bush";
        assertEquals
                (
                        expectedWinner,
                        tally(votes)
                );

    }
      lab2
    @Test
    public void testRoll(){
        int num = 4;
        assertEquals(num, Library.roll(num).length);
    }
    @Test
    public void containsDuplicates() {
        assertTrue(Library.containsDuplicates(new int[] { 1, 3, 4, 4 }));
    }

    @Test
    public void average() {
        assertEquals(3, Library.getAverage(new int[] { 1 ,2 ,3 ,4 ,5}));
    }

    @Test
    public void lowestAverage() {
        assertArrayEquals(new int[] { 1, 2, 3, 4 },
                Library.lowestAverage(new int[][] { { 1, 2, 3, 4 }, { 1, 3, 5, 7 } }));
    }
}
